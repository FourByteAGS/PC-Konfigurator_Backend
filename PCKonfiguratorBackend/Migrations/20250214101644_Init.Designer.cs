// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PCKonfiguratorBackend;

#nullable disable

namespace PCKonfiguratorBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250214101644_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPU", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("cpuSpecificationid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("price")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("cpuSpecificationid");

                    b.ToTable("Cpus");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPUFan", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("cpufanSpecificationsid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("dimensionsid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("price")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("cpufanSpecificationsid");

                    b.HasIndex("dimensionsid");

                    b.ToTable("CPUFans");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPUMemory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("maxCapacity")
                        .HasColumnType("int");

                    b.Property<float?>("maxSpeed")
                        .HasColumnType("real");

                    b.Property<int?>("memoryType")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("CPUMemory");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPUSpecification", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("baseClock")
                        .HasColumnType("float");

                    b.Property<double?>("boostClock")
                        .HasColumnType("float");

                    b.Property<int?>("core")
                        .HasColumnType("int");

                    b.Property<Guid>("cpuMemoryid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("l2Cache")
                        .HasColumnType("int");

                    b.Property<int?>("l3Cache")
                        .HasColumnType("int");

                    b.Property<int?>("maxTemp")
                        .HasColumnType("int");

                    b.Property<int?>("socket")
                        .HasColumnType("int");

                    b.Property<int?>("threads")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("cpuMemoryid");

                    b.ToTable("CPUSpecification");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CpuFanSpecifications", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("connector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("heatpipes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("socket")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("CpuFanSpecifications");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Dimensions", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("depth")
                        .HasColumnType("real");

                    b.Property<float?>("height")
                        .HasColumnType("real");

                    b.Property<float?>("width")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Fan", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("dimensionsid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fanSpecificationsid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("price")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("dimensionsid");

                    b.HasIndex("fanSpecificationsid");

                    b.ToTable("Fans");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.FanSpecifications", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("besonderheit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noiseLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("power")
                        .HasColumnType("int");

                    b.Property<int?>("rpm")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("FanSpecifications");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.GPU", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("dimensionsid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("gpuSpecificationsid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("price")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("dimensionsid");

                    b.HasIndex("gpuSpecificationsid");

                    b.ToTable("GPUs");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.GPUSpecifications", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("boostclock")
                        .HasColumnType("int");

                    b.Property<int?>("coreclock")
                        .HasColumnType("int");

                    b.Property<int?>("memory")
                        .HasColumnType("int");

                    b.Property<int?>("power")
                        .HasColumnType("int");

                    b.Property<float?>("speed")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("GPUSpecifications");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Mainboard", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("dimensionsid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("mainboardSpecificationsid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("price")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("dimensionsid");

                    b.HasIndex("mainboardSpecificationsid");

                    b.ToTable("Mainboards");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.MainboardSpecifications", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("chipset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("formFactor")
                        .HasColumnType("int");

                    b.Property<int?>("m2Slot")
                        .HasColumnType("int");

                    b.Property<int?>("memoryType")
                        .HasColumnType("int");

                    b.Property<int?>("sataPorts")
                        .HasColumnType("int");

                    b.Property<int?>("socket")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("MainboardSpecifications");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.PSU", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("dimensionsid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("price")
                        .HasColumnType("real");

                    b.Property<Guid>("psuSpecificationid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("dimensionsid");

                    b.HasIndex("psuSpecificationid");

                    b.ToTable("PSUs");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.PSUSpecification", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("certifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("connectors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noiseLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("power")
                        .HasColumnType("int");

                    b.Property<int?>("rpm")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("PSUSpecification");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.RAM", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("price")
                        .HasColumnType("real");

                    b.Property<Guid>("ramSpecificationsid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("ramSpecificationsid");

                    b.ToTable("RAMs");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.RAMSpecifications", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("MemoryType")
                        .HasColumnType("int");

                    b.Property<int?>("capacity")
                        .HasColumnType("int");

                    b.Property<int?>("speed")
                        .HasColumnType("int");

                    b.Property<float?>("voltage")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("RAMSpecifications");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Storage", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("price")
                        .HasColumnType("real");

                    b.Property<Guid>("storageSpecificationsid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("storageSpecificationsid");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.StorageSpecifications", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("capacity")
                        .HasColumnType("int");

                    b.Property<int?>("readSpeeed")
                        .HasColumnType("int");

                    b.Property<string>("schnittstelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("writeSpeeed")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("StorageSpecifications");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Tower", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("dimensionsid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("price")
                        .HasColumnType("real");

                    b.Property<Guid>("towerCompatibilityid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("towerType")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("dimensionsid");

                    b.HasIndex("towerCompatibilityid");

                    b.ToTable("Towers");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.TowerCompatibility", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("maxCpuCoolerHeight")
                        .HasColumnType("real");

                    b.Property<float?>("maxGpuLenght")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("TowerCompatibility");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPU", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.CPUSpecification", "cpuSpecification")
                        .WithMany()
                        .HasForeignKey("cpuSpecificationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cpuSpecification");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPUFan", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.CpuFanSpecifications", "cpufanSpecifications")
                        .WithMany()
                        .HasForeignKey("cpufanSpecificationsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCKonfiguratorBackend.Models.Dimensions", "dimensions")
                        .WithMany()
                        .HasForeignKey("dimensionsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cpufanSpecifications");

                    b.Navigation("dimensions");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPUSpecification", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.CPUMemory", "cpuMemory")
                        .WithMany()
                        .HasForeignKey("cpuMemoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cpuMemory");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Fan", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.Dimensions", "dimensions")
                        .WithMany()
                        .HasForeignKey("dimensionsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCKonfiguratorBackend.Models.FanSpecifications", "fanSpecifications")
                        .WithMany()
                        .HasForeignKey("fanSpecificationsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dimensions");

                    b.Navigation("fanSpecifications");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.GPU", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.Dimensions", "dimensions")
                        .WithMany()
                        .HasForeignKey("dimensionsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCKonfiguratorBackend.Models.GPUSpecifications", "gpuSpecifications")
                        .WithMany()
                        .HasForeignKey("gpuSpecificationsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dimensions");

                    b.Navigation("gpuSpecifications");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Mainboard", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.Dimensions", "dimensions")
                        .WithMany()
                        .HasForeignKey("dimensionsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCKonfiguratorBackend.Models.MainboardSpecifications", "mainboardSpecifications")
                        .WithMany()
                        .HasForeignKey("mainboardSpecificationsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dimensions");

                    b.Navigation("mainboardSpecifications");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.PSU", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.Dimensions", "dimensions")
                        .WithMany()
                        .HasForeignKey("dimensionsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCKonfiguratorBackend.Models.PSUSpecification", "psuSpecification")
                        .WithMany()
                        .HasForeignKey("psuSpecificationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dimensions");

                    b.Navigation("psuSpecification");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.RAM", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.RAMSpecifications", "ramSpecifications")
                        .WithMany()
                        .HasForeignKey("ramSpecificationsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ramSpecifications");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Storage", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.StorageSpecifications", "storageSpecifications")
                        .WithMany()
                        .HasForeignKey("storageSpecificationsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("storageSpecifications");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Tower", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.Dimensions", "dimensions")
                        .WithMany()
                        .HasForeignKey("dimensionsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCKonfiguratorBackend.Models.TowerCompatibility", "towerCompatibility")
                        .WithMany()
                        .HasForeignKey("towerCompatibilityid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dimensions");

                    b.Navigation("towerCompatibility");
                });
#pragma warning restore 612, 618
        }
    }
}
