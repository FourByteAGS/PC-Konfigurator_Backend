// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PCKonfiguratorBackend;

#nullable disable

namespace PCKonfiguratorBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250213111838_CPUundTowerModel")]
    partial class CPUundTowerModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPU", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("cpuSpecificationid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("cpuSpecificationid");

                    b.ToTable("CPU");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPUMemory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("maxCapacity")
                        .HasColumnType("int");

                    b.Property<decimal>("maxSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("memoryType")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("CPUMemory");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPUSpecification", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("baseClock")
                        .HasColumnType("float");

                    b.Property<double>("boostClock")
                        .HasColumnType("float");

                    b.Property<int>("core")
                        .HasColumnType("int");

                    b.Property<Guid>("cpuMemoryid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("l2Cache")
                        .HasColumnType("int");

                    b.Property<int>("l3Cache")
                        .HasColumnType("int");

                    b.Property<int>("maxTemp")
                        .HasColumnType("int");

                    b.Property<int>("socket")
                        .HasColumnType("int");

                    b.Property<int>("threads")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("cpuMemoryid");

                    b.ToTable("CPUSpecification");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Dimensions", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("depth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.ProductCollection", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("selectedCPUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("selectedTowerid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("token")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("selectedCPUid");

                    b.HasIndex("selectedTowerid");

                    b.ToTable("ProductCollection");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Tower", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("dimensionsid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("towerCompatibilityid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("towerType")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("dimensionsid");

                    b.HasIndex("towerCompatibilityid");

                    b.ToTable("Tower");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.TowerModel.TowerCompatibility", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("maxCpuCoolerHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("maxGpuLenght")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("TowerCompatibility");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPU", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.CPUSpecification", "cpuSpecification")
                        .WithMany()
                        .HasForeignKey("cpuSpecificationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cpuSpecification");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.CPUSpecification", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.CPUMemory", "cpuMemory")
                        .WithMany()
                        .HasForeignKey("cpuMemoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cpuMemory");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.ProductCollection", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.CPU", "selectedCPU")
                        .WithMany()
                        .HasForeignKey("selectedCPUid");

                    b.HasOne("PCKonfiguratorBackend.Models.Tower", "selectedTower")
                        .WithMany()
                        .HasForeignKey("selectedTowerid");

                    b.Navigation("selectedCPU");

                    b.Navigation("selectedTower");
                });

            modelBuilder.Entity("PCKonfiguratorBackend.Models.Tower", b =>
                {
                    b.HasOne("PCKonfiguratorBackend.Models.Dimensions", "dimensions")
                        .WithMany()
                        .HasForeignKey("dimensionsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCKonfiguratorBackend.Models.TowerModel.TowerCompatibility", "towerCompatibility")
                        .WithMany()
                        .HasForeignKey("towerCompatibilityid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dimensions");

                    b.Navigation("towerCompatibility");
                });
#pragma warning restore 612, 618
        }
    }
}
