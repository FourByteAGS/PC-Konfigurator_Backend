name: Docker Build, Test & Deploy Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 📥 1. Repository auschecken
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 🔧 2. .NET SDK installieren
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      # 📦 3. Abhängigkeiten wiederherstellen
      - name: Restore dependencies
        run: dotnet restore PCKonfiguratorBackend/PCKonfiguratorBackend.csproj

      # 🔨 4. Das Backend bauen
      - name: Build Backend
        run: dotnet build PCKonfiguratorBackend/PCKonfiguratorBackend.csproj --configuration Release --no-restore

      # ✅ 5. Tests ausführen
      - name: Run Tests
        run: dotnet test PCKonfiguratorBackend.Tests/PCKonfiguratorBackend.Tests.csproj --no-restore --verbosity normal
        continue-on-error: true

      # 🐳 6. Docker-Login
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        if: success()

      # 🔨 7. Docker-Image bauen
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/pckonfigurator-backend:latest -f PCKonfiguratorBackend/Dockerfile .
          docker tag ${{ secrets.DOCKER_USERNAME }}/pckonfigurator-backend:latest ${{ secrets.DOCKER_USERNAME }}/pckonfigurator-backend:${{ github.run_number }}

      # 🚀 8. Docker-Image pushen
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/pckonfigurator-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/pckonfigurator-backend:${{ github.run_number }}
        if: success()

      # 📡 9. Deployment auf den Server mit docker-compose
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # 🏡 9.1. Stelle sicher, dass das Repo im Home-Verzeichnis liegt
            cd $HOME
            if [ -d "$HOME/PC-Konfigurator_Backend" ]; then
              echo "🚀 Repository-Update: Pulling latest changes..."
              cd $HOME/PC-Konfigurator_Backend
              git reset --hard
              git pull origin main
            else
              echo "📥 Repository nicht vorhanden. Klone neues Repo..."
              git clone https://github.com/FourByteAGS/PC-Konfigurator_Backend.git $HOME/PC-Konfigurator_Backend
            fi

            # 📂 9.2. Gehe in das Repository
            cd $HOME/PC-Konfigurator_Backend

            # 🛑 9.3. Stoppe alte Container, falls sie laufen
            docker-compose down || true

            # 🚀 9.4. Starte alle Container mit docker-compose
            docker-compose up -d --build
